name: CI

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches:
      - "*"
  push:
    branches:
      - main

env:
  DB_DATABASE: database/database.sqlite
  DB_CONNECTION: sqlite

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download the security checker binary
        run: |
          curl -L -s https://github.com/fabpot/local-php-security-checker/releases/download/v2.0.6/local-php-security-checker_2.0.6_linux_amd64 -o local-php-security-checker
          chmod +x local-php-security-checker

      - name: Run the binary
        run: ./local-php-security-checker

  tests:
    name: Run tests and verfication
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Copy .env.testing
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Cache composer.lock
        uses: actions/cache@v4
        id: composer-cache
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          path: vendor

      - name: Install Laravel dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Create sqlite dummy database (PHPUnit db)
        run: |
          mkdir -p database
          touch ${{ env.DB_DATABASE }}

      - name: Execute tests before allow merges
        env:
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
        run: php artisan test -p

  pint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT }}

      - name: Get last commit message
        id: last-commit-message
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT
      - name: Run laravel pint
        uses: aglipanci/laravel-pint-action@2.3.1
        with:
          preset: psr12
          verboseMode: true
          pintVersion: 1.13.0

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ steps.last-commit-message.outputs.msg }}
          commit_options: "--amend --no-edit"
          push_options: "--force"
          skip_fetch: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Generate a new release
    if: contains(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: semantic release
        id: release
        run: |
          npm i -D @semantic-release/exec
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
